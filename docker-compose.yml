version: '3'
services:
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
      - "2003:2003"
    user: '1026:65537'
    env_file:
      - ./conf/influxdb.env
    volumes:
      - ./influxdb/influxdb/:/var/lib/influxdb/:rw
      - ./influxdb/influxdb2/:/var/lib/influxdb2/:rw
      - ./conf/influxdb.conf:/etc/influxdb/influxdb.conf:ro

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    user: '1026:65537'
    env_file:
      - ./conf/common.env
      - ./conf/grafana.env
    links:
      - influxdb
    depends_on:
      - influxdb
    volumes:
      - ./grafana:/var/lib/grafana

  # Consolidated Loxone Smart Home service
  loxone_smart_home:
    build: ./loxone_smart_home
    container_name: loxone_smart_home
    restart: unless-stopped
    ports:
      - "2000:2000/udp"  # UDP listener port
    user: '1026:65537'
    environment:
      # General settings
      - LOG_LEVEL=INFO
      
      # Module enable/disable
      - UDP_LISTENER_ENABLED=true
      - MQTT_BRIDGE_ENABLED=true
      - WEATHER_SCRAPER_ENABLED=true
      - GROWATT_CONTROLLER_ENABLED=true
      - OTE_COLLECTOR_ENABLED=true
      
      # MQTT settings
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      
      # InfluxDB settings
      - INFLUXDB_HOST=http://influxdb:8086
      - INFLUXDB_ORG=loxone
      - INFLUXDB_BUCKET=loxone
      
      # UDP Listener settings
      - UDP_LISTENER_HOST=0.0.0.0
      - UDP_LISTENER_PORT=2000
      
      # Loxone Bridge settings
      - LOXONE_HOST=${LOXONE_HOST:-192.168.0.200}
      - LOXONE_PORT=4000
      - MQTT_TOPICS=energy/solar,teplomer/TC,teplomer/RH,teslamate/cars/1/+
      
      # Weather settings
      - USE_SERVICE=openmeteo
      - LATITUDE=${LATITUDE:-49.4949522}
      - LONGITUDE=${LONGITUDE:-17.4302361}
      - OPENWEATHERMAP_API_KEY=${OPENWEATHERMAP_API_KEY:-}
      
      # Growatt settings
      - GROWATT_SIMULATION_MODE=${GROWATT_SIMULATION_MODE:-false}
    env_file:
      - ./conf/common.env
      - ./conf/influxdb.env
    links:
      - influxdb
      - mosquitto
    depends_on:
      - influxdb
      - mosquitto
    volumes:
      - ./loxone_smart_home:/app:ro  # Read-only for security
      - ./loxone_smart_home/.env:/app/.env:ro  # Environment file

  mosquitto:
    image: eclipse-mosquitto:2
    hostname: mosquitto
    container_name: mosquitto
    restart: unless-stopped
    command: mosquitto -c /mosquitto-no-auth.conf
    ports:
      - 1883:1883
      - 9001:9001
    user: '1026:65537'
    env_file:
      - ./conf/common.env
    links:
      - grafana
    volumes:
      - ./mosquitto/:/mosquitto/:rw
      - ./mosquitto/data/:/mosquitto/data/:rw
      - ./mosquitto/log/:/mosquitto/log/:rw

  telegraf:
    image: telegraf:latest
    hostname: telegraf
    container_name: telegraf
    restart: unless-stopped
    user: '1026:65537'
    volumes:
    - ./telegraf/config/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
      - mosquitto
    links:
      - influxdb
      - mosquitto
    ports:
    - '8125:8125/udp'

  teslamate:
    image: teslamate/teslamate:edge
    container_name: teslamate
    restart: always
    environment:
      - ENCRYPTION_KEY=b2Vsdm5yZHF2cGFrc2w5ZGVucm9xbGVyZXVjYXB1ZWpyYQ== # Replace with your generated key
      - DATABASE_USER=teslamate
      - DATABASE_PASS=adminadmin
      - DATABASE_NAME=teslamate
      - DATABASE_HOST=database
      - MQTT_HOST=mosquitto
      - TZ=Europe/Prague  # Set your timezone
    ports:
      - 4000:4000
    volumes:
      - ./import:/opt/app/import
    cap_drop:
      - all
    depends_on:
      - database
      - mosquitto

  database:
    image: postgres:16
    container_name: teslamate-db
    restart: always
    environment:
      - POSTGRES_USER=teslamate
      - POSTGRES_PASSWORD=adminadmin
      - POSTGRES_DB=teslamate
    volumes:
      - teslamate-db:/var/lib/postgresql/data

volumes:
  cargo-cache:
  teslamate-db:
#  teslamate-grafana-data:
  mosquitto-conf:
  mosquitto-data:
  mosquitto-log:

