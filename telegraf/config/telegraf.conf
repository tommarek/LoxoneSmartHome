# Telegraf configuration

# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.

# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.

# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.

# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "5s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will cache metric_buffer_limit metrics for each output, and will
  ## flush this buffer on a successful write.
  metric_buffer_limit = 10000
  ## Flush the buffer whenever full, regardless of flush_interval.
  flush_buffer_when_full = true

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "120s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "5s"

  ## Run telegraf in debug mode
  debug = false
  ## Run telegraf in quiet mode
  quiet = false
  ## Override default hostname, if empty use os.Hostname()
  hostname = ""

###############################################################################
#                                  OUTPUTS                                    #
###############################################################################

[[outputs.influxdb_v2]]
  ## The URLs of the InfluxDB cluster nodes.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  ##   ex: urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]
  urls = ["http://influxdb:8086"]

  ## Token for authentication.
  token = "7HrEuj8kzOS1f-0mjU_GT4hS_9gHfdjUT6j5QAM22oDg0z44DsxmiveTGMqTa0Zl1QezDh132utLbXi-IL8h9A=="

  ## Organization is the name of the organization you wish to write to.
  organization = "loxone"

  ## Destination bucket to write into.
  bucket = "solar"

  ## The value of this tag will be used to determine the bucket.  If this
  ## tag is not set the 'bucket' option is used as the default.
  # bucket_tag = ""

  ## If true, the bucket tag will not be added to the metric.
  # exclude_bucket_tag = false

  ## Timeout for HTTP messages.
  # timeout = "5s"

  ## Additional HTTP headers
  # http_headers = {"X-Special-Header" = "Special-Value"}

  # Precision of writes, valid values are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".
  # note: using second precision greatly helps InfluxDB compression
  precision = "s"

  ## HTTP Proxy override, if unset values the standard proxy environment
  ## variables are consulted to determine which proxy, if any, should be used.
  # http_proxy = "http://corporate.proxy:3128"

  ## HTTP User-Agent
  # user_agent = "telegraf"

  ## Content-Encoding for write request body, can be set to "gzip" to
  ## compress body or "identity" to apply no encoding.
  # content_encoding = "gzip"

  ## Enable or disable uint support for writing uints influxdb 2.0.
  # influx_uint_support = false

  ## Optional TLS Config for use on HTTP connections.
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

[[inputs.mqtt_consumer]]
    servers = ["tcp://mosquitto:1883"]
    topics = [
      "teplomer/TC",
      "teplomer/RH",
      "teplomer/DC",
    ]

    ## Data format to consume.
    data_format = "value"
    data_type = "float"

    ## Name of the measurement
    name_override = "teplomer"

    ## Optional tags
    [inputs.mqtt_consumer.tags]
      topic = "topic"
 
[[inputs.mqtt_consumer]]
    servers = ["tcp://mosquitto:1883"]
    topics = [
      "energy/solar",
    ]
    data_format = "json_v2"
    [[inputs.mqtt_consumer.json_v2]]
      measurement_name = "solar"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "InverterStatus"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "InputPower"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PV1Voltage"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PV1InputCurrent"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PV1InputPower"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PV2Voltage"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PV2InputCurrent"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PV2InputPower"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "OutputPower"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "TodayGenerateEnergy"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "TotalGenerateEnergy"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PV1EnergyToday"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PV1EnergyTotal"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PV2EnergyToday"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PV2EnergyTotal"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "PVEnergyTotal"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "InverterTemperature"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "DischargePower"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "ChargePower"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "BatteryVoltage"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "SOC"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "ACPowerToUser"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "ACPowerToUserTotal"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "ACPowerToGrid"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "ACPowerToGridTotal"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "INVPowerToLocalLoad"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "INVPowerToLocalLoadTotal"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "BatteryTemperature"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "BatteryState"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "EnergyToUserToday"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "EnergyToUserTotal"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "EnergyToGridToday"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "EnergyToGridTotal"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "DischargeEnergyToday"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "DischargeEnergyTotal"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "ChargeEnergyToday"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "ChargeEnergyTotal"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "LocalLoadEnergyToday"
        type = "float"
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "LocalLoadEnergyTotal"
        type = "float"
